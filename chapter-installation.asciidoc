[[install]]
== Installing and Running Nexus

[[install-introduction]]
=== Introduction

Nexus is a Java application that requires a Java Runtime Environment. When you run Nexus, you are running a server
application with a web-based user interface. The Nexus application runs with the Eclipse Jetty servlet container
and Apache Karaf OSGi-container. Installation is a simple process. This chapter provides further details to get
started with Nexus and keep it running successfully in production deployments.

WARNING: Currently Nexus 3 is a pre-release application and running it for production usage is not recommended.

[[install-sect-downloading]]
=== Downloading Nexus

Nexus can be downloaded from https://support.sonatype.com/forums/23079216[Sonatype]. Bundles are available for the
64bit versions for Apple OSX, Microsoft Windows and Linux. They contain all necessary resources to install and run
Nexus. You can download a plain archive file or an installer for your operating system of a specific release
version of Nexus. The latest version of Nexus to download is currently {version-exact}.

The plain archive files are Gzip TAR (TGZ) or ZIP files with naming similar to specific for the operating systems.

[subs="attributes"]
----
nexus-{version-exact}-mac.tgz 
nexus-{version-exact}-unix.tar.gz
nexus-{version-exact}-win64.zip
----

The operating system installer applications use naming similar to

[subs="attributes"]
----
nexus-{version-exact}-mac.dmg
nexus-{version-exact}-unix.sh
nexus-{version-exact}-win64.exe
----

Next steps after a successful download, depend on the bundle you downloaded and the operating system and are
documented in <<installation-archive>> and <<installation-installer>>.


=== Java Runtime Environment

{nexus} requires a Java 8 Runtime Environment (JRE) from Oracle. The install bundles for Nexus include suitable
runtime environments for the specific operating system.

If you prefer to use an external runtime, we recommend to use the latest version of Java available from the
http://www.oracle.com/technetwork/java/javase/downloads/index.html[Oracle website].

You can confirm the installed Java version with the `java` command:

----
$  java -version
java version "1.8.0_60"
Java(TM) SE Runtime Environment (build 1.8.0_60-b27)
Java HotSpot(TM) 64-Bit Server VM (build 25.60-b23, mixed mode)
----

When multiple JDK or JRE versions are installed, you need to ensure the correct version by running the above
command as the operating system user, that is used to run Nexus.

TIP: OpenJDK or other Java distributions or older Java versions are not supported.

[[installation-archive]]
===  Installing and Running Nexus with the Bundle Archive

The Nexus bundle archives combine the Nexus application and all required resources in an archive
file. Installing and running Nexus is straightforward. Simply unpack the Nexus bundle archive in a directory, to
which you have full access. If you are installing Nexus on a local workstation to give it a test run, you can
install it in your home directory or wherever you like. Nexus doesn't have any hard-coded directories and will run
from any directory.

You can extract the archive ZIP for Windows with any archiving tool like http://www.7-zip.org/download.html[7zip]
or on the command line with e.g.  


[subs="attributes"]
----
$ 7za.exe e nexus-{version-exact}-win64.zip
----

On Windows you should install Nexus outside +Program Files+ to avoid problems with Windows file registry
virtualization. If you plan to run Nexus as a specific user you could install into the +AppData\Local+ directory 
of that users home directory. Otherwise simply use e.g., +C:\nexus+ or something similar, ensuring that the user
running Nexus has full access.


On OSX or Linux the downloaded the GZipâ€™d TAR archive can be extracted with:

[subs="attributes"]
----
$ tar xvzf nexus-{version-exact}-mac.tgz
$ tar xvzf nexus-{version-exact}-unix.tar.gz
----

If you are installing Nexus on a server, you should use a directory other than your users home directory. On a
Unix machine common practice is to use `/opt`.

The extraction process creates a directory with a number of directories inside. Further
details about these folders can be found in <<directories>>

The `bin` folder contains the generic startup scripts for Unix-like platforms called `nexus`. The Windows
platforms equivalent is called `nexus.bat`. To start Nexus on a Unix-like platform like Linux use

[subs="attributes"]
----
./nexus-{version-exact}/bin/nexus run
----

Similarly, starting on Windows can be done with the +nexus.bat+ file. Starting Nexus with the `run` command will
leave Nexus running in the current shell and display the log output.

Nexus is fully started once you see a message like the following in the log:

[subs="attributes"]
----
...
Started Sonatype Nexus OSS {version-exact}
...
----

In order to shut down Nexus running via the `run` command, you have to press `CTRL-C`.

The `nexus` script can also be used to managed Nexus as a background application on OSX and Unix with the `start`,
`stop` and `restart` commands.

Once the repository manager is started you can access the user interface as details in <<access>>.

[[installation-installer]]
===  Installing Nexus with the Installer Application

The Nexus installer application can be used as an alternative to the bundle archive installation process
documented in <<installation-archive>>.

You can start the application by

Windows::  Start the `.exe` by double-clicking on it.

OSX:: Extract the `.dmg` file by double-clicking on icon and then start the installer by double-clicking on the `.app`.

Unix:: Run the .sh file in a command line window or double-clicking on it.

The installer application guides you throw multiple steps to get Nexus installed:

Welcome:: Press 'Next' after reading the instructions to proceed.

Installation Type:: Select the edition of Nexus you want to install. Currently only Nexus OSS available. Proceed
with 'Next'.

Destination Directory:: Configure the directory into which the Nexus application should be installed. The user
running the installer and the user that will run the Nexus application have to have full access to the specified
directory.

Data Directory:: Configure the directory for all the data stored by Nexus including configuration, repository and
component data.

Options:: Configure 'HTTP', 'JVM' and 'Service'-related aspects. The 'HTTP' configuration allows you to configure
the 'HTTP Port', the 'HTTP Host' and the 'Context Path'. 
+
The port defaults to 8081 and can be set to any available port in your organization. The host defaults to 0.0.0.0,
which means that Nexus will be available via any IP number assigned to the server. The context path defaults to
the root context, but can be configured to other paths such as `/nexus`.
+
The 'JVM'  configuration includes 'Initial Heap' and 'Maximum Heap' parameters. The 'Select JVM' checkbox allows
you to activate an additional setup step, that will allow you to use a specific JVM installation instead of the
bundled JVM.
+ 
The 'Service' configuration allows you to start the Nexus repository manager as part of the installation process.

License Agreement::  Read and accept the license agreement with the checkbox and press 'Install' to proceed.

After the extraction of all required assets into the configured directories a last step allows you to create a
desktop icon and open the application. Press 'Finish' to complete the installation.

[[access]]
=== Accessing the Nexus User Interface

Once the Nexus repository manager is started, the application is listening on all IP addresses that are configured
for the current host on port 8081.  To access the Nexus web application, fire up a web browser and type in the URL
http://localhost:8081/[http://localhost:8081/]. If Nexus started up successfully, the user interface looks similar
to <<fig-nexus-ui-initial>>.

[[fig-nexus-ui-initial]]
.Initial Nexus User Interface
image::figs/web/ui-overview-anonymous.png[scale=45]

While we use +localhost+ throughout this documentation, you may need to use the IP Loopback Address of 
+127.0.0.1+, the IP address or the DNS hostname assigned to the machine running Nexus.

[[directories]]
=== Installation Directories

An installation of the Nexus repository manager includes a number of nested directories: 

[subs="attributes"]
----
$ ls -1 nexus-{version-exact} 
LICENSE.txt 
NOTICE.txt 
bin 
data 
deploy 
etc 
lib 
public
system
----

`LICENSE.txt and NOTICE.txt`:: contain legal details about the license and copyright notices.
`bin`::  contains the `nexus` startup script itself as well as startup-related  configuration files.
`data`:: This directory contains all of the repository and configuration data for Nexus. By default, this
directory is nested within the Nexus-installation directory. If you desire to separate the application files from
the actual data you can customize the location of the +data+ directory. This can be achieved by setting the
`nexus-work` property in the configuration file `etc/org.sonatype.nexus.cfg` e.g. to an absolute path
`nexus-work=/opt/nexus-data`.
//// 
TBD... should this be documented or is it needed or should it be removed from the product
`deploy`:: is empty. 
////
`etc` :: contains configuration files. 
`lib` :: contains binary libraries related to Apache Karaf
`public`:: contains public resources of the Nexus application
`system`:: contains all components and plugins that consitute the Nexus application


[[configure-runtime]]
=== Configuring the Runtime Environment for Nexus

Nexus is an application providing a web application user interface and running as a server application with the 
help of the Eclipse Jetty servlet container and the Apache Karaf OSGi container running on a Java Virtual Machine.

Configuring the specifics of this runtime involves configuration for these components in various configuration 
files and startup scripts. This section details these and provides recipes for specific tasks.

The startup of the JVM running Nexus is managed via files in the `bin` directory within the Nexus installation. 
Nexus startup is performed with the JVM configured via the `JAVA_HOME` environment variable and the configuration 
in the file `bin\setenv` .

The main location for further configuration files is the `etc` directory within the Nexus installation. It 
numerous files including specifically:

config.properties:: The main configuration for the Apache Karaf runtime. This file should 'not' be modified.

custom.properties:: Customizable configuration used by Apache Karaf. This file can be used to pass additional 
parameters to the Apache Karaf container.

jetty-*.xml:: A number of configuration files for Eclipse Jetty

org.apache.* and org.ops4j.*:: Various Karaf and OSGi related configuration files.

org.sonatype.nexus.cfg:: Main configuration file for the Nexus application allowing you to configure aspects 
such as ports used for HTTP and HTTPS access, location of the data and configuration storage as well as the 
context path and host.

system.properties:: Configuration parameters used for the JVM and application start up.

////
/* Local Variables: */
/* ispell-personal-dictionary: "ispell.dict" */
/* End:             */
////
